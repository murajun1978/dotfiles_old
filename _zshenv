# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="cloud"

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to disable command auto-correction.
# DISABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git)

source $ZSH/oh-my-zsh.sh

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# You may need to manually set your language environment
export LANG=en_US.UTF-8

export TERM=xterm-256color
alias ctags='/usr/local/Cellar/ctags/5.8/bin/ctags'

export PATH="/usr/local/bin:/usr/bin:$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init - zsh)"

# alias
alias rn='rails new . -T -B'
alias gi='git-issue'
alias -s rb=ruby

# git-issue percol git-flow
function exists { which $1 &> /dev/null }
function is_issued() {
  ISSUE_TYPE=$(git config issue.type 2>/dev/null)
  if [ "$ISSUE_TYPE" != "" ]; then
    return 0
  else
    return 1
  fi
}

if exists percol; then
  function percol_select_from_git_issue_list_to_git_flow_feature_start() {
    if $(is_issued) ; then
      echo "Loading..."
      TICKET=$(git-issue --no-color list | percol | sed -e 's/^#\([0-9]*\).*/\1/')
      BUFFER="git flow feature start id/$TICKET"
      CURSOR=$#BUFFER}
      zle -R -c
    else
      echo "issue.typeが設定されてません"
      echo
      zle reset-prompt
    fi
  }
  function percol_select_from_git_issue_list_to_finish_ticket() {
    if $(is_issued) ; then
      echo "Loading..."
      TICKET=$(git-issue --no-color list | percol | sed -e 's/^#\([0-9]*\).*/\1/')
      BUFFER="git-issue update $TICKET --status=5 --ratio=100"
      CURSOR=$#BUFFER
      zle -R -c
    else
      echo "issue.typeが設定されてません"
      echo 
      zle reset-prompt  
    fi
  }
  function percol_select_from_git_issue() {
    if $(is_issued) ; then
      echo "Loading..."
      TICKET=$(git-issue --no-color list | percol | sed -e 's/^#\([0-9]*\).*/\1/')
      git-issue show $TICKET
    else
      echo "issue.typeが設定されてません"
      echo 
      zle reset-prompt
    fi
  }

  zle -N percol_select_from_git_issue_list_to_git_flow_feature_start
  bindkey '^B^F' percol_select_from_git_issue_list_to_git_flow_feature_start

  zle -N percol_select_from_git_issue_list_to_finish_ticket
  bindkey '^B^U' percol_select_from_git_issue_list_to_finish_ticket

  zle -N percol_select_from_git_issue
  bindkey '^B^I' percol_select_from_git_issue
fi
